name: build and run executables

on:
  push:
    branches: "main"
  pull_request:
    branches: "main"

jobs:
  # Create the release to hold the files
  create-release:
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: ${{ github.ref_name }}_release_${{ github.run_number }}
          draft: false
          prerelease: false

  # Build the bin and append to the release
  build-linux:
    needs: [create-release]
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: Get current date and time
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H_%M_%S')"
          
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'  # Replace '3.x' with your Python version
          
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: run pyinstaller
        run: |
          pyinstaller --onefile ./mcap_parser.py

      - name: compress artifact
        run: |
          tar -czvf parser-exe-linux.tar.gz ./dist

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./parser-exe-linux.tar.gz
          asset_name: mcap_parser_linux.tar.gz
          asset_content_type: application/zip

  # Build the bin for windows and append to release
  build-windows:
    needs: [create-release]
    runs-on: windows-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v2
          
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'  # Replace '3.x' with your Python version

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
  
      - name: run pyinstaller
        run: |
          pyinstaller --onefile ./mcap_parser.py

      - name: compress artifact
        run: |
          Compress-Archive ./dist parser-exe-windows.zip

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./parser-exe-windows.zip
          asset_name: mcap_parser_windows.zip
          asset_content_type: application/zip
