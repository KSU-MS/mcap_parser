name: build and run executables

on:
  push:
    branches: "main"
  pull_request:
    branches: "main"

jobs:
  build-linux:

    runs-on: ubuntu-latest

    steps:
    - name: checkout code
      uses: actions/checkout@v2
        
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'  # Replace '3.x' with your Python version
        
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: run pyinstaller
      run: |
        pyinstaller --onefile ./main.py
  
    - name: upload artifacts     
      uses: actions/upload-artifact@v2
      with:
        name: parser-exe-linux
        path: |
          ./build/*
          ./dist/*
    - name: release all files
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}-${{ steps.date.outputs.date }} 
        files: |
          ./*

  build-windows:

    runs-on: windows-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
  
      - name: run pyinstaller
        run: |
          pyinstaller --onefile ./main.py
  
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: parser-exe-windows
          path: |
              ./dist/*
              ./build/*
              ./*.m

  create-exe-release:
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: ${{ github.ref_name }}_release_${{ github.run_number }}
          draft: false
          prerelease: false
        
  release-bin:
    needs: [build-linux,create-exe-release]
    runs-on: ubuntu-latest
    steps:

      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: parser-exe-linux
          path: parser-exe-download

      - name: compress artifact
        run: |
          tar -czvf parser-exe-linux.tar.gz ./parser-exe-download

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-exe-release.outputs.upload_url }}
          asset_path: ./parser-exe-linux.tar.gz
          asset_name: parser_exe_linux.tar.gz
          asset_content_type: application/zip

  release-exe:
    needs: [build-windows,create-exe-release]
    runs-on: windows-latest
    steps:
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: parser-exe-windows
          path: parser-exe-download

      - name: compress artifact
        run: |
          Compress-Archive ./parser-exe-download parser-exe-windows.zip

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-exe-release.outputs.upload_url }}
          asset_path: ./parser-exe-windows.zip
          asset_name: parser_exe_windows.zip
          asset_content_type: application/zip
